plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "org.alberto97.aircontroller"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def localProps = new Properties()
        if (file("local.properties").exists()) {
            file("local.properties")?.withInputStream { localProps.load(it) }
        }

        def defaultDemoAccount = "{\"demo@example.com\"}"
        buildConfigField "String[]", "DEMO_ACCOUNTS", (localProps.getProperty("DEMO_ACCOUNTS") ?: defaultDemoAccount)
    }

    buildFeatures {
        compose true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }

    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation project(":provider-base")
    implementation project(":provider-ayla")
    implementation project(":provider-demo")

    // AndroidX Appcompat
    implementation libs.androidx.appcompat

    // AndroidX Compose
    implementation libs.androidx.compose.ui.ui
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.materialIconsExt
    implementation libs.androidx.compose.runtimeLivedata
    implementation libs.androidx.activity.activityCompose

    // AndroidX Data Store
    implementation libs.androidx.datastore.preferences

    // AndroidX Lifecycle
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.lifecycle.viewmodel.savedstate

    // AndroidX Navigation
    implementation libs.androidx.navigation.compose

    // Koin
    implementation libs.koin.android
    implementation libs.koin.androidxCompose

    testImplementation libs.junit
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}
